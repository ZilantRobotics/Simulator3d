# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api_pb2 as api__pb2


class APIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SpawnAgent = channel.unary_unary(
                '/API/SpawnAgent',
                request_serializer=api__pb2.SpawnAgentRequest.SerializeToString,
                response_deserializer=api__pb2.SpawnAgentResponse.FromString,
                )
        self.SpawnObstacle = channel.unary_unary(
                '/API/SpawnObstacle',
                request_serializer=api__pb2.SpawnObstacleRequest.SerializeToString,
                response_deserializer=api__pb2.SpawnObstacleResponse.FromString,
                )
        self.AgentOnCollision = channel.unary_unary(
                '/API/AgentOnCollision',
                request_serializer=api__pb2.AgentOnCollisionRequest.SerializeToString,
                response_deserializer=api__pb2.AgentOnCollisionResponse.FromString,
                )
        self.AgentOnMinDistance = channel.unary_unary(
                '/API/AgentOnMinDistance',
                request_serializer=api__pb2.AgentOnMinDistanceRequest.SerializeToString,
                response_deserializer=api__pb2.AgentOnMinDistanceResponse.FromString,
                )
        self.AgentGetBBox = channel.unary_unary(
                '/API/AgentGetBBox',
                request_serializer=api__pb2.AgentGetBBoxRequest.SerializeToString,
                response_deserializer=api__pb2.AgentGetBBoxResponse.FromString,
                )
        self.RemoveAgent = channel.unary_unary(
                '/API/RemoveAgent',
                request_serializer=api__pb2.RemoveAgentRequest.SerializeToString,
                response_deserializer=api__pb2.RemoveAgentResponse.FromString,
                )
        self.LoadScene = channel.unary_unary(
                '/API/LoadScene',
                request_serializer=api__pb2.LoadSceneRequest.SerializeToString,
                response_deserializer=api__pb2.LoadSceneResponse.FromString,
                )
        self.GetCurrentScene = channel.unary_unary(
                '/API/GetCurrentScene',
                request_serializer=api__pb2.GetCurrentSceneRequest.SerializeToString,
                response_deserializer=api__pb2.GetCurrentSceneResponse.FromString,
                )
        self.AgentGetSensors = channel.unary_unary(
                '/API/AgentGetSensors',
                request_serializer=api__pb2.AgentGetSensorsRequest.SerializeToString,
                response_deserializer=api__pb2.AgentGetSensorsResponse.FromString,
                )
        self.SensorGetTransform = channel.unary_unary(
                '/API/SensorGetTransform',
                request_serializer=api__pb2.SensorGetTransformRequest.SerializeToString,
                response_deserializer=api__pb2.SensorGetTransformResponse.FromString,
                )
        self.SensorSetState = channel.unary_unary(
                '/API/SensorSetState',
                request_serializer=api__pb2.SensorSetStateRequest.SerializeToString,
                response_deserializer=api__pb2.SensorSetStateResponse.FromString,
                )
        self.SensorGetState = channel.unary_unary(
                '/API/SensorGetState',
                request_serializer=api__pb2.SensorGetStateRequest.SerializeToString,
                response_deserializer=api__pb2.SensorGetStateResponse.FromString,
                )
        self.SensorGpsData = channel.unary_unary(
                '/API/SensorGpsData',
                request_serializer=api__pb2.SensorGpsDataRequest.SerializeToString,
                response_deserializer=api__pb2.SensorGpsDataResponse.FromString,
                )
        self.LandingPlatformControl = channel.unary_unary(
                '/API/LandingPlatformControl',
                request_serializer=api__pb2.LandingPlatformControlRequest.SerializeToString,
                response_deserializer=api__pb2.LandingPlatformControlResponse.FromString,
                )
        self.EmitFailure = channel.unary_unary(
                '/API/EmitFailure',
                request_serializer=api__pb2.EmitFailureRequest.SerializeToString,
                response_deserializer=api__pb2.EmitFailureResponse.FromString,
                )
        self.GetSpawn = channel.unary_unary(
                '/API/GetSpawn',
                request_serializer=api__pb2.GetSpawnRequest.SerializeToString,
                response_deserializer=api__pb2.GetSpawnResponse.FromString,
                )
        self.MapFromGps = channel.unary_unary(
                '/API/MapFromGps',
                request_serializer=api__pb2.MapFromGpsRequest.SerializeToString,
                response_deserializer=api__pb2.MapFromGpsResponse.FromString,
                )
        self.MapToGps = channel.unary_unary(
                '/API/MapToGps',
                request_serializer=api__pb2.MapToGpsRequest.SerializeToString,
                response_deserializer=api__pb2.MapToGpsResponse.FromString,
                )
        self.Reset = channel.unary_unary(
                '/API/Reset',
                request_serializer=api__pb2.ResetRequest.SerializeToString,
                response_deserializer=api__pb2.ResetResponse.FromString,
                )
        self.Raycast = channel.unary_unary(
                '/API/Raycast',
                request_serializer=api__pb2.RaycastRequest.SerializeToString,
                response_deserializer=api__pb2.RaycastResponse.FromString,
                )
        self.TimeOfDaySet = channel.unary_unary(
                '/API/TimeOfDaySet',
                request_serializer=api__pb2.TimeOfDaySetRequest.SerializeToString,
                response_deserializer=api__pb2.TimeOfDaySetResponse.FromString,
                )
        self.TimeOfDayGet = channel.unary_unary(
                '/API/TimeOfDayGet',
                request_serializer=api__pb2.TimeOfDayGetRequest.SerializeToString,
                response_deserializer=api__pb2.TimeOfDayGetResponse.FromString,
                )
        self.WeatherSet = channel.unary_unary(
                '/API/WeatherSet',
                request_serializer=api__pb2.WeatherSetRequest.SerializeToString,
                response_deserializer=api__pb2.WeatherSetResponse.FromString,
                )
        self.WeatherGet = channel.unary_unary(
                '/API/WeatherGet',
                request_serializer=api__pb2.WeatherGetRequest.SerializeToString,
                response_deserializer=api__pb2.WeatherGetResponse.FromString,
                )
        self.Run = channel.unary_unary(
                '/API/Run',
                request_serializer=api__pb2.RunRequest.SerializeToString,
                response_deserializer=api__pb2.RunResponse.FromString,
                )
        self.SubscribeOnCollisionEvent = channel.unary_stream(
                '/API/SubscribeOnCollisionEvent',
                request_serializer=api__pb2.CollisionEventRequest.SerializeToString,
                response_deserializer=api__pb2.CollisionEvent.FromString,
                )
        self.SubscribeOnMinDistanceEvent = channel.unary_stream(
                '/API/SubscribeOnMinDistanceEvent',
                request_serializer=api__pb2.OnMinDistanceEventRequest.SerializeToString,
                response_deserializer=api__pb2.OnMinDistanceEvent.FromString,
                )
        self.UnsubscribeAll = channel.unary_unary(
                '/API/UnsubscribeAll',
                request_serializer=api__pb2.UnsubscribeAllRequest.SerializeToString,
                response_deserializer=api__pb2.UnsubscribeAllResponse.FromString,
                )


class APIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SpawnAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpawnObstacle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AgentOnCollision(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AgentOnMinDistance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AgentGetBBox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadScene(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentScene(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AgentGetSensors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SensorGetTransform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SensorSetState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SensorGetState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SensorGpsData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LandingPlatformControl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EmitFailure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpawn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MapFromGps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MapToGps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Raycast(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimeOfDaySet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimeOfDayGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WeatherSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WeatherGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Run(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeOnCollisionEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeOnMinDistanceEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsubscribeAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_APIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SpawnAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.SpawnAgent,
                    request_deserializer=api__pb2.SpawnAgentRequest.FromString,
                    response_serializer=api__pb2.SpawnAgentResponse.SerializeToString,
            ),
            'SpawnObstacle': grpc.unary_unary_rpc_method_handler(
                    servicer.SpawnObstacle,
                    request_deserializer=api__pb2.SpawnObstacleRequest.FromString,
                    response_serializer=api__pb2.SpawnObstacleResponse.SerializeToString,
            ),
            'AgentOnCollision': grpc.unary_unary_rpc_method_handler(
                    servicer.AgentOnCollision,
                    request_deserializer=api__pb2.AgentOnCollisionRequest.FromString,
                    response_serializer=api__pb2.AgentOnCollisionResponse.SerializeToString,
            ),
            'AgentOnMinDistance': grpc.unary_unary_rpc_method_handler(
                    servicer.AgentOnMinDistance,
                    request_deserializer=api__pb2.AgentOnMinDistanceRequest.FromString,
                    response_serializer=api__pb2.AgentOnMinDistanceResponse.SerializeToString,
            ),
            'AgentGetBBox': grpc.unary_unary_rpc_method_handler(
                    servicer.AgentGetBBox,
                    request_deserializer=api__pb2.AgentGetBBoxRequest.FromString,
                    response_serializer=api__pb2.AgentGetBBoxResponse.SerializeToString,
            ),
            'RemoveAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveAgent,
                    request_deserializer=api__pb2.RemoveAgentRequest.FromString,
                    response_serializer=api__pb2.RemoveAgentResponse.SerializeToString,
            ),
            'LoadScene': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadScene,
                    request_deserializer=api__pb2.LoadSceneRequest.FromString,
                    response_serializer=api__pb2.LoadSceneResponse.SerializeToString,
            ),
            'GetCurrentScene': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentScene,
                    request_deserializer=api__pb2.GetCurrentSceneRequest.FromString,
                    response_serializer=api__pb2.GetCurrentSceneResponse.SerializeToString,
            ),
            'AgentGetSensors': grpc.unary_unary_rpc_method_handler(
                    servicer.AgentGetSensors,
                    request_deserializer=api__pb2.AgentGetSensorsRequest.FromString,
                    response_serializer=api__pb2.AgentGetSensorsResponse.SerializeToString,
            ),
            'SensorGetTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.SensorGetTransform,
                    request_deserializer=api__pb2.SensorGetTransformRequest.FromString,
                    response_serializer=api__pb2.SensorGetTransformResponse.SerializeToString,
            ),
            'SensorSetState': grpc.unary_unary_rpc_method_handler(
                    servicer.SensorSetState,
                    request_deserializer=api__pb2.SensorSetStateRequest.FromString,
                    response_serializer=api__pb2.SensorSetStateResponse.SerializeToString,
            ),
            'SensorGetState': grpc.unary_unary_rpc_method_handler(
                    servicer.SensorGetState,
                    request_deserializer=api__pb2.SensorGetStateRequest.FromString,
                    response_serializer=api__pb2.SensorGetStateResponse.SerializeToString,
            ),
            'SensorGpsData': grpc.unary_unary_rpc_method_handler(
                    servicer.SensorGpsData,
                    request_deserializer=api__pb2.SensorGpsDataRequest.FromString,
                    response_serializer=api__pb2.SensorGpsDataResponse.SerializeToString,
            ),
            'LandingPlatformControl': grpc.unary_unary_rpc_method_handler(
                    servicer.LandingPlatformControl,
                    request_deserializer=api__pb2.LandingPlatformControlRequest.FromString,
                    response_serializer=api__pb2.LandingPlatformControlResponse.SerializeToString,
            ),
            'EmitFailure': grpc.unary_unary_rpc_method_handler(
                    servicer.EmitFailure,
                    request_deserializer=api__pb2.EmitFailureRequest.FromString,
                    response_serializer=api__pb2.EmitFailureResponse.SerializeToString,
            ),
            'GetSpawn': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpawn,
                    request_deserializer=api__pb2.GetSpawnRequest.FromString,
                    response_serializer=api__pb2.GetSpawnResponse.SerializeToString,
            ),
            'MapFromGps': grpc.unary_unary_rpc_method_handler(
                    servicer.MapFromGps,
                    request_deserializer=api__pb2.MapFromGpsRequest.FromString,
                    response_serializer=api__pb2.MapFromGpsResponse.SerializeToString,
            ),
            'MapToGps': grpc.unary_unary_rpc_method_handler(
                    servicer.MapToGps,
                    request_deserializer=api__pb2.MapToGpsRequest.FromString,
                    response_serializer=api__pb2.MapToGpsResponse.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=api__pb2.ResetRequest.FromString,
                    response_serializer=api__pb2.ResetResponse.SerializeToString,
            ),
            'Raycast': grpc.unary_unary_rpc_method_handler(
                    servicer.Raycast,
                    request_deserializer=api__pb2.RaycastRequest.FromString,
                    response_serializer=api__pb2.RaycastResponse.SerializeToString,
            ),
            'TimeOfDaySet': grpc.unary_unary_rpc_method_handler(
                    servicer.TimeOfDaySet,
                    request_deserializer=api__pb2.TimeOfDaySetRequest.FromString,
                    response_serializer=api__pb2.TimeOfDaySetResponse.SerializeToString,
            ),
            'TimeOfDayGet': grpc.unary_unary_rpc_method_handler(
                    servicer.TimeOfDayGet,
                    request_deserializer=api__pb2.TimeOfDayGetRequest.FromString,
                    response_serializer=api__pb2.TimeOfDayGetResponse.SerializeToString,
            ),
            'WeatherSet': grpc.unary_unary_rpc_method_handler(
                    servicer.WeatherSet,
                    request_deserializer=api__pb2.WeatherSetRequest.FromString,
                    response_serializer=api__pb2.WeatherSetResponse.SerializeToString,
            ),
            'WeatherGet': grpc.unary_unary_rpc_method_handler(
                    servicer.WeatherGet,
                    request_deserializer=api__pb2.WeatherGetRequest.FromString,
                    response_serializer=api__pb2.WeatherGetResponse.SerializeToString,
            ),
            'Run': grpc.unary_unary_rpc_method_handler(
                    servicer.Run,
                    request_deserializer=api__pb2.RunRequest.FromString,
                    response_serializer=api__pb2.RunResponse.SerializeToString,
            ),
            'SubscribeOnCollisionEvent': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeOnCollisionEvent,
                    request_deserializer=api__pb2.CollisionEventRequest.FromString,
                    response_serializer=api__pb2.CollisionEvent.SerializeToString,
            ),
            'SubscribeOnMinDistanceEvent': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeOnMinDistanceEvent,
                    request_deserializer=api__pb2.OnMinDistanceEventRequest.FromString,
                    response_serializer=api__pb2.OnMinDistanceEvent.SerializeToString,
            ),
            'UnsubscribeAll': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsubscribeAll,
                    request_deserializer=api__pb2.UnsubscribeAllRequest.FromString,
                    response_serializer=api__pb2.UnsubscribeAllResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'API', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class API(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SpawnAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/SpawnAgent',
            api__pb2.SpawnAgentRequest.SerializeToString,
            api__pb2.SpawnAgentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SpawnObstacle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/SpawnObstacle',
            api__pb2.SpawnObstacleRequest.SerializeToString,
            api__pb2.SpawnObstacleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AgentOnCollision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/AgentOnCollision',
            api__pb2.AgentOnCollisionRequest.SerializeToString,
            api__pb2.AgentOnCollisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AgentOnMinDistance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/AgentOnMinDistance',
            api__pb2.AgentOnMinDistanceRequest.SerializeToString,
            api__pb2.AgentOnMinDistanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AgentGetBBox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/AgentGetBBox',
            api__pb2.AgentGetBBoxRequest.SerializeToString,
            api__pb2.AgentGetBBoxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/RemoveAgent',
            api__pb2.RemoveAgentRequest.SerializeToString,
            api__pb2.RemoveAgentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadScene(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/LoadScene',
            api__pb2.LoadSceneRequest.SerializeToString,
            api__pb2.LoadSceneResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentScene(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/GetCurrentScene',
            api__pb2.GetCurrentSceneRequest.SerializeToString,
            api__pb2.GetCurrentSceneResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AgentGetSensors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/AgentGetSensors',
            api__pb2.AgentGetSensorsRequest.SerializeToString,
            api__pb2.AgentGetSensorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SensorGetTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/SensorGetTransform',
            api__pb2.SensorGetTransformRequest.SerializeToString,
            api__pb2.SensorGetTransformResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SensorSetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/SensorSetState',
            api__pb2.SensorSetStateRequest.SerializeToString,
            api__pb2.SensorSetStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SensorGetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/SensorGetState',
            api__pb2.SensorGetStateRequest.SerializeToString,
            api__pb2.SensorGetStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SensorGpsData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/SensorGpsData',
            api__pb2.SensorGpsDataRequest.SerializeToString,
            api__pb2.SensorGpsDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LandingPlatformControl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/LandingPlatformControl',
            api__pb2.LandingPlatformControlRequest.SerializeToString,
            api__pb2.LandingPlatformControlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EmitFailure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/EmitFailure',
            api__pb2.EmitFailureRequest.SerializeToString,
            api__pb2.EmitFailureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpawn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/GetSpawn',
            api__pb2.GetSpawnRequest.SerializeToString,
            api__pb2.GetSpawnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MapFromGps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/MapFromGps',
            api__pb2.MapFromGpsRequest.SerializeToString,
            api__pb2.MapFromGpsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MapToGps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/MapToGps',
            api__pb2.MapToGpsRequest.SerializeToString,
            api__pb2.MapToGpsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/Reset',
            api__pb2.ResetRequest.SerializeToString,
            api__pb2.ResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Raycast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/Raycast',
            api__pb2.RaycastRequest.SerializeToString,
            api__pb2.RaycastResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimeOfDaySet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/TimeOfDaySet',
            api__pb2.TimeOfDaySetRequest.SerializeToString,
            api__pb2.TimeOfDaySetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimeOfDayGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/TimeOfDayGet',
            api__pb2.TimeOfDayGetRequest.SerializeToString,
            api__pb2.TimeOfDayGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WeatherSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/WeatherSet',
            api__pb2.WeatherSetRequest.SerializeToString,
            api__pb2.WeatherSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WeatherGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/WeatherGet',
            api__pb2.WeatherGetRequest.SerializeToString,
            api__pb2.WeatherGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Run(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/Run',
            api__pb2.RunRequest.SerializeToString,
            api__pb2.RunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeOnCollisionEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/API/SubscribeOnCollisionEvent',
            api__pb2.CollisionEventRequest.SerializeToString,
            api__pb2.CollisionEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeOnMinDistanceEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/API/SubscribeOnMinDistanceEvent',
            api__pb2.OnMinDistanceEventRequest.SerializeToString,
            api__pb2.OnMinDistanceEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnsubscribeAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API/UnsubscribeAll',
            api__pb2.UnsubscribeAllRequest.SerializeToString,
            api__pb2.UnsubscribeAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
